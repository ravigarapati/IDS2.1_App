// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add Period screen Component to be rendered on 12 hour format 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffff",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffff",
          "flex": 0.15,
          "flexDirection": "column",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="goBack"
      >
        <BoschIcon
          name="bosch-ic-back-left"
          size={24}
          style={
            Object {
              "marginHorizontal": 10,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "marginLeft": 24,
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 21,
            "marginVertical": 10,
          }
        }
      >
        Period 0
      </Text>
    </View>
  </View>
  <Image
    source={
      Object {
        "testUri": "../../../src/assets/images/header_ribbon.png",
      }
    }
    style={
      Object {
        "height": 8,
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "flexDirection": "column",
        "height": 1107.22,
        "justifyContent": "space-between",
        "marginHorizontal": 16,
        "marginTop": 16,
      }
    }
  >
    <View>
      <CustomWheelPicker
        accessibilityHintText="Activate to open a modal and select the period starting time."
        accessibilityWheelPickerValue={
          Array [
            "the hour",
            "minutes",
            "hour format",
          ]
        }
        defaultValue={
          Array [
            0,
            0,
            0,
          ]
        }
        defaultValueZero={true}
        edit={false}
        icon={
          <SvgClock
            fill="#000"
          />
        }
        isRequiredField={true}
        isSvgIcon={true}
        onConfirm={[Function]}
        pickerWidth="33%"
        placeholder="Starting"
        value=""
        values={
          Array [
            Array [
              "00",
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11",
              "12",
            ],
            Array [
              "00",
              "15",
              "30",
              "45",
            ],
            Array [
              "AM",
              "PM",
            ],
          ]
        }
      />
      <View
        style={
          Object {
            "marginVertical": 16,
          }
        }
      >
        <CustomWheelPicker
          accessibilityHintText="Activate to open a modal and select the heating setpoint."
          accessibilityWheelPickerValue={
            Array [
              "heating degrees",
            ]
          }
          defaultValue={
            Array [
              25,
            ]
          }
          defaultValueZero={false}
          edit={false}
          icon={
            <SvgTemperature1
              fill="#000"
            />
          }
          isRequiredField={true}
          isSvgIcon={true}
          onConfirm={[Function]}
          pickerWidth="100%"
          placeholder="Heat"
          testID="heatConfirmButton"
          value=""
          values={
            Array [
              Array [
                "45°",
                "46°",
                "47°",
                "48°",
                "49°",
                "50°",
                "51°",
                "52°",
                "53°",
                "54°",
                "55°",
                "56°",
                "57°",
                "58°",
                "59°",
                "60°",
                "61°",
                "62°",
                "63°",
                "64°",
                "65°",
                "66°",
                "67°",
                "68°",
                "69°",
                "70°",
                "71°",
                "72°",
                "73°",
                "74°",
                "75°",
                "76°",
                "77°",
                "78°",
                "79°",
                "80°",
                "81°",
                "82°",
                "83°",
                "84°",
                "85°",
                "86°",
                "87°",
                "88°",
                "89°",
                "90°",
              ],
            ]
          }
        />
      </View>
      <CustomWheelPicker
        accessibilityHintText="Activate to open a modal and select the cooling setpoint."
        accessibilityWheelPickerValue={
          Array [
            "cooling degrees",
          ]
        }
        defaultValue={
          Array [
            24,
          ]
        }
        defaultValueZero={false}
        edit={false}
        icon={
          <SvgTemperature1
            fill="#000"
          />
        }
        isRequiredField={true}
        isSvgIcon={true}
        onConfirm={[Function]}
        pickerWidth="100%"
        placeholder="Cool"
        testID="coolConfirmButton"
        value=""
        values={
          Array [
            Array [
              "54°",
              "55°",
              "56°",
              "57°",
              "58°",
              "59°",
              "60°",
              "61°",
              "62°",
              "63°",
              "64°",
              "65°",
              "66°",
              "67°",
              "68°",
              "69°",
              "70°",
              "71°",
              "72°",
              "73°",
              "74°",
              "75°",
              "76°",
              "77°",
              "78°",
              "79°",
              "80°",
              "81°",
              "82°",
              "83°",
              "84°",
              "85°",
              "86°",
              "87°",
              "88°",
              "89°",
              "90°",
              "91°",
              "92°",
              "93°",
              "94°",
              "95°",
              "96°",
              "97°",
              "98°",
              "99°",
            ],
          ]
        }
      />
    </View>
    <View>
      <Button
        accessibilityLabelText="Done. Currently disabled, you need to set the needed information before continue."
        disabled={true}
        onPress={[Function]}
        testID="submit"
        text="Done"
        type="primary"
      />
    </View>
  </View>
</View>
`;

exports[`Add Period screen Component to be rendered on fahrenheit 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffff",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffff",
          "flex": 0.15,
          "flexDirection": "column",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="goBack"
      >
        <BoschIcon
          name="bosch-ic-back-left"
          size={24}
          style={
            Object {
              "marginHorizontal": 10,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "marginLeft": 24,
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 21,
            "marginVertical": 10,
          }
        }
      >
        Period 1
      </Text>
    </View>
  </View>
  <Image
    source={
      Object {
        "testUri": "../../../src/assets/images/header_ribbon.png",
      }
    }
    style={
      Object {
        "height": 8,
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "flexDirection": "column",
        "height": 1107.22,
        "justifyContent": "space-between",
        "marginHorizontal": 16,
        "marginTop": 16,
      }
    }
  >
    <View>
      <CustomWheelPicker
        accessibilityHintText="Activate to open a modal and select the period starting time."
        accessibilityWheelPickerValue={
          Array [
            "the hour",
            "minutes",
            "hour format",
          ]
        }
        defaultValue={
          Array [
            0,
            0,
          ]
        }
        defaultValueZero={true}
        edit={false}
        icon={
          <SvgClock
            fill="#000"
          />
        }
        isRequiredField={true}
        isSvgIcon={true}
        onConfirm={[Function]}
        pickerWidth="49%"
        placeholder="Starting"
        value=""
        values={
          Array [
            Array [
              "00",
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
            ],
            Array [
              "00",
              "15",
              "30",
              "45",
            ],
          ]
        }
      />
      <View
        style={
          Object {
            "marginVertical": 16,
          }
        }
      >
        <CustomWheelPicker
          accessibilityHintText="Activate to open a modal and select the heating setpoint."
          accessibilityWheelPickerValue={
            Array [
              "heating degrees",
            ]
          }
          defaultValue={
            Array [
              25,
            ]
          }
          defaultValueZero={false}
          edit={false}
          icon={
            <SvgTemperature1
              fill="#000"
            />
          }
          isRequiredField={true}
          isSvgIcon={true}
          onConfirm={[Function]}
          pickerWidth="100%"
          placeholder="Heat"
          testID="heatConfirmButton"
          value=""
          values={
            Array [
              Array [
                "45°",
                "46°",
                "47°",
                "48°",
                "49°",
                "50°",
                "51°",
                "52°",
                "53°",
                "54°",
                "55°",
                "56°",
                "57°",
                "58°",
                "59°",
                "60°",
                "61°",
                "62°",
                "63°",
                "64°",
                "65°",
                "66°",
                "67°",
                "68°",
                "69°",
                "70°",
                "71°",
                "72°",
                "73°",
                "74°",
                "75°",
                "76°",
                "77°",
                "78°",
                "79°",
                "80°",
                "81°",
                "82°",
                "83°",
                "84°",
                "85°",
                "86°",
                "87°",
                "88°",
                "89°",
                "90°",
              ],
            ]
          }
        />
      </View>
      <CustomWheelPicker
        accessibilityHintText="Activate to open a modal and select the cooling setpoint."
        accessibilityWheelPickerValue={
          Array [
            "cooling degrees",
          ]
        }
        defaultValue={
          Array [
            24,
          ]
        }
        defaultValueZero={false}
        edit={false}
        icon={
          <SvgTemperature1
            fill="#000"
          />
        }
        isRequiredField={true}
        isSvgIcon={true}
        onConfirm={[Function]}
        pickerWidth="100%"
        placeholder="Cool"
        testID="coolConfirmButton"
        value=""
        values={
          Array [
            Array [
              "54°",
              "55°",
              "56°",
              "57°",
              "58°",
              "59°",
              "60°",
              "61°",
              "62°",
              "63°",
              "64°",
              "65°",
              "66°",
              "67°",
              "68°",
              "69°",
              "70°",
              "71°",
              "72°",
              "73°",
              "74°",
              "75°",
              "76°",
              "77°",
              "78°",
              "79°",
              "80°",
              "81°",
              "82°",
              "83°",
              "84°",
              "85°",
              "86°",
              "87°",
              "88°",
              "89°",
              "90°",
              "91°",
              "92°",
              "93°",
              "94°",
              "95°",
              "96°",
              "97°",
              "98°",
              "99°",
            ],
          ]
        }
      />
    </View>
    <View>
      <Button
        accessibilityLabelText="Done. Currently disabled, you need to set the needed information before continue."
        disabled={true}
        onPress={[Function]}
        testID="submit"
        text="Done"
        type="primary"
      />
    </View>
  </View>
</View>
`;
